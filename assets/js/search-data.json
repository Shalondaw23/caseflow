{"0": {
    "doc": "README",
    "title": "README",
    "content": "GitHub Pages for Caseflow . ",
    "url": "/caseflow/README.html",
    "relUrl": "/README.html"
  },"1": {
    "doc": "README",
    "title": "Purpose of the gh-pages branch",
    "content": "This branch (gh-pages) is used by GitHub Pages. This branch is not intended to be merged in the main branch. Note that it has a completely separate commit history from the main branch. For more info, see … . This branch has files for documentation. Some are automatically generated (e.g., Caseflow DB schema by a GitHub Action); others are manually created (e.g., Bat Team Remedies). Why not wiki? . ",
    "url": "/caseflow/README.html#purpose-of-the-gh-pages-branch",
    "relUrl": "/README.html#purpose-of-the-gh-pages-branch"
  },"2": {
    "doc": "README",
    "title": "Viewing",
    "content": "It can be viewed . | with GitHub Pages http://department-of-veterans-affairs.github.io/caseflow/ | without GitHub Pages enabled: https://htmlpreview.github.io/?https://github.com/department-of-veterans-affairs/caseflow/blob/gh-pages/gh-pages/schema/index.html | . ",
    "url": "/caseflow/README.html#viewing",
    "relUrl": "/README.html#viewing"
  },"3": {
    "doc": "README",
    "title": "Cloning / Checkout",
    "content": " ",
    "url": "/caseflow/README.html#cloning--checkout",
    "relUrl": "/README.html#cloning--checkout"
  },"4": {
    "doc": "README",
    "title": "Committing changes",
    "content": "Anyone can commit to this branch without a peer-review, just like the Caseflow wiki page. Instead of committing directly to this branch, create a development branch and do a squash-merge when you are satisfied with the changes, just like what is done in the main branch. ",
    "url": "/caseflow/README.html#committing-changes",
    "relUrl": "/README.html#committing-changes"
  },"5": {
    "doc": "Contents",
    "title": "Contents",
    "content": "Preview dark theme . | Bat Team Quick Ref . | Dispatch_stuck, , ok tags: batteam, dispatch”, and stuck . | Bat Team, , tags: . | . | . ",
    "url": "/caseflow/index",
    "relUrl": "/index"
  },"6": {
    "doc": "Contents",
    "title": "Database",
    "content": ". | Caseflow DB schema (created via Jailer) | Help . | Jekyll | . | . ",
    "url": "/caseflow/index#database",
    "relUrl": "/index#database"
  },"7": {
    "doc": "Dispatch claim being “stuck”",
    "title": "Dispatch claim being “stuck”",
    "content": "If I receive a support issue regarding Caseflow Dispatch claim being “stuck”. | Look for a Sentry error in #appeals-dispatch channel. | If the error is related to AASM::InvalidTransition, that means the state transition is invalid. | Find the associated dispatch task in the dispatch_tasks table. | Choose the appropriate state for the task by referencing the aasm machine in Dispatch::Task model and update the task manually using production console. | Example of a similar problem can be found here. | . ",
    "url": "/caseflow/batteam/dispatch/dispatch_stuck.html",
    "relUrl": "/batteam/dispatch/dispatch_stuck.html"
  },"8": {
    "doc": "Caseflow Dispatch",
    "title": "Caseflow Dispatch",
    "content": "Caseflow Dispatch . ",
    "url": "/caseflow/batteam/dispatch/",
    "relUrl": "/batteam/dispatch/"
  },"9": {
    "doc": "Bat Team",
    "title": "Bat Team",
    "content": "Bat Team . ",
    "url": "/caseflow/batteam/",
    "relUrl": "/batteam/"
  },"10": {
    "doc": "Diagrams",
    "title": "Diagrams",
    "content": "# Diagrams Testing https://github.com/zhustec/jekyll-diagrams ## blockdiag {% blockdiag %} blockdiag { A -> B -> C -> D; A -> E -> F -> G; } {% endblockdiag %} ## seqdiag {% seqdiag %} seqdiag { browser -> webserver [label = \"GET /index.html\"]; browser webserver [label = \"POST /blog/comment\"]; webserver -> database [label = \"INSERT comment\"]; webserver A [label=a]; S -> B [label=b]; A -> D [label=c]; B -> D [label=d]; } {% endgraphviz %} ## mermaid {% mermaid %} sequenceDiagram participant John participant Alice Alice->>John: Hello John, how are you? John-->>Alice: Great! {% endmermaid %} ## nomnoml {% nomnoml %} [Pirate|eyeCount: Int|raid();pillage()| [beard]--[parrot] [beard]-:>[foul mouth] ] [Marauder][Pirate] [jollyness]->[rum] [jollyness]->[singing] [Pirate]-> *[rum|tastiness: Int|swig()] [Pirate]->[singing] [singing][rum] [st]->[plunder] [plunder]->[more loot] [more loot]->[st] [more loot] no ->[e] [Sailor] - [shiver me;timbers] {% endnomnoml %} ## plantuml {% plantuml %} @startuml class Car Driver - Car : drives > Car *- Wheel : have 4 > Car -- Person : playing : play; playing => stopped : stop; playing => paused : pause; paused => playing : pause; paused => stopped : stop; }; initial => \"tape player off\"; \"tape player off\" => stopped : power; \"tape player on\" => \"tape player off\" : power; {% endsmcat %} ## wavedrom {% wavedrom %} {signal: [ {name: 'clk', wave: 'p.....|...'}, {name: 'dat', wave: 'x.345x|=.x', data: ['head', 'body', 'tail', 'data']}, {name: 'req', wave: '0.1..0|1.0'}, {name: 'ack', wave: '1.....|01.'} ]} {% endwavedrom %} ",
    "url": "/caseflow/diagrams.html",
    "relUrl": "/diagrams.html"
  }
}
